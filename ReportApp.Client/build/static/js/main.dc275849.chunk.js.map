{"version":3,"sources":["images/GS1_Canada.svg","images/product_management.svg","components/reports/Reports.js","components/layout/Header.js","components/layout/SideNav.js","components/common/LoadingPanel.js","actions/actionTypes.js","actions/ajaxStatusActions.js","config/Settings.js","components/common/ExportExcel.js","components/common/ReportGrid.js","config/ReportColumns.js","components/common/ReportTitle.js","components/reports/ListOfGtinNotReceived.js","actions/ServiceRequestActions.js","reducers/initialState.js","reducers/index.js","reducers/weeksReducer.js","reducers/ajaxStatusReducer.js","reducers/dataReducer.js","reducers/filtersReducer.js","components/common/filterTypes.js","components/common/DropDownFilter.js","components/common/ToggleFilter.js","components/common/ReportFilters.js","actions/FilterActions.js","components/reports/ScheduleServiceRequestsStatusReport.js","components/reports/IncidentsReportsForItemReceived.js","App.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Reports","react_default","a","createElement","className","Link","to","Component","Header","src","Gs1Logo","alt","id","SideNav","Tooltip_default","title","placement","icon","connect","state","ownProps","isloading","ajaxCallsInProgress","_ref","loadingPanel","content","document","querySelector","empty","ReactDOM","createPortal","BEGIN_AJAX_CALL","END_AJAX_CALL","AJAX_CALL_ERROR","LOAD_LIST_OF_GTIN_NOT_RECEIVED","LOAD_SCHEDULED_SERVICE_REQUESTS","LOAD_INCIDENTS_REPORTS_FOR_ITEM_RECEIVED","LOAD_CURRENT_WEEKS","LOAD_DEFAULT_WEEK","SET_FILTERS","beginAjaxCall","type","types","endAjaxCall","ajaxCallError","ResultsOptions","label","ReceivedOptions","IsExternalOptions","ExportExcel","export","_this","_exporter","save","_this2","this","columns","props","map","column","index","dist_es_main","key","field","filter","onClick","data","fileName","ref","exporter","ReportGrid","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","sort","dir","skip","take","main","width","minResizableWidth","minWidth","gridContent","orderBy","slice","resizable","total","length","pageable","pageSizes","previousNext","onPageChange","event","setState","page","pageSize","sortable","onSortChange","common_ExportExcel","loadData","IncidentsReportsForItemReceivedColumns","ScheduledServiceRequestsColumns","ListOfGtinNotReceivedColumns","ReportTitle","ListOfGtinNotReceived","listOfGtinNotReceived","getListOfGtinNotReceived","ReportTitle_ReportTitle","components_common_ReportGrid","common_LoadingPanel","dispatch","axios","get","then","res","forEach","row","DateCreated","moment","format","DateUpdated","DateScheduled","payload","catch","error","toastr","reducers_initialState","weeks","defaultWeek","currentWeeks","filters","scheduledServiceRequests","incidentsReportsForItemReceived","rootReducer","combineReducers","arguments","undefined","initialState","action","objectSpread","toConsumableArray","substring","DropDownFilter","onChange","target","value","dataItemKey","selectedItem","_","find","x","kendo_react_dropdowns_dist_es_main","textField","ToggleFilter","kendo_react_inputs_dist_es_main","checked","ReportFilters","onStartWeekChange","startWeek","setFilter","onEndWeekChange","endWeek","onResultChange","result","onReceivedChange","received","onIsExternalChange","isExternal","onShowAllIncident","isShowAllIncident","getCurrentWeeks","getDefaultWeek","nextProps","filterType","common_DropDownFilter","common_ToggleFilter","ScheduleServiceRequestsStatusReport","getScheduleServiceRequests","refreshData","common_ReportFilters","startWeekId","endWeekId","receivedId","resultId","IncidentsReportsForItemReceived","getIncidentsReportsForItemReceived","isExternalId","incidentId","store","middleware","thunk","reduxImmutableStateInvariant","createStore","composeWithDevTools","applyMiddleware","apply","configureStore","App","es","BrowserRouter","Header_Header","SideNav_SideNav","Route","exact","path","component","Boolean","window","location","hostname","match","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dc275849.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GS1_Canada.7c7d5516.svg\";","module.exports = __webpack_public_path__ + \"static/media/product_management.1cedd992.svg\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Reports.css\";\r\n\r\nexport default class Reports extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <ul className=\"list-group list-group-flush col-8\">\r\n          <li className=\"list-group-item list-group-item-action\">\r\n            <Link\r\n              to=\"/reports/listOfGtinNotReceived\"\r\n              className=\"btn btn-md btn-link\"\r\n            >\r\n              List of GTIN Not Received\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item list-group-item-action\">\r\n            <Link\r\n              to=\"/reports/incidentsReportsForItemReceived\"\r\n              className=\"btn btn-md btn-link\"\r\n            >\r\n              Incidents reports for item received\r\n            </Link>\r\n          </li>\r\n          <li className=\"list-group-item list-group-item-action\">\r\n            <Link\r\n              to=\"/reports/scheduleServiceRequestsStatusReport\"\r\n              className=\"btn btn-md btn-link\"\r\n            >\r\n              Schedule Service requests status report\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport Gs1Logo from \"../../images/GS1_Canada.svg\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"main-header\">\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light header\">\r\n        <img src={Gs1Logo} alt=\"\" className=\"pull-left logo\" />\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <h1>Reports</h1>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n      <div className=\"toolnavigation\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./SideNav.css\";\r\nimport icon from \"../../images/product_management.svg\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function SideNav() {\r\n  return (\r\n    <div className=\"main-menu-fixed\">\r\n      <ul className=\"ul-menu\">\r\n        <li>\r\n          <Link to=\"/reports\">\r\n            <Tooltip title=\"Home Page\" placement=\"right\">\r\n              <img src={icon} alt=\"Home\" className=\"image-menu-svg-24\" />\r\n            </Tooltip>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst LoadingPanel = ({ isloading }) => {\r\n  const loadingPanel = (\r\n    <div className=\"k-loading-mask\">\r\n      <span className=\"k-loading-text\">Loading</span>\r\n      <div className=\"k-loading-image\" />\r\n      <div className=\"k-loading-color\" />\r\n    </div>\r\n  );\r\n\r\n  const content = document && document.querySelector(\"App\");\r\n  const empty = <div />;\r\n\r\n  return isloading\r\n    ? content\r\n      ? ReactDOM.createPortal(loadingPanel, content)\r\n      : loadingPanel\r\n    : empty;\r\n};\r\n\r\nLoadingPanel.propTypes = {\r\n  isloading: PropTypes.bool.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    isloading: state.ajaxCallsInProgress > 0\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(LoadingPanel);\r\n","export const BEGIN_AJAX_CALL = \"BEGIN_AJAX_CALL\";\r\nexport const END_AJAX_CALL = \"END_AJAX_CALL\";\r\nexport const AJAX_CALL_ERROR = \"AJAX_CALL_ERROR\";\r\nexport const LOAD_LIST_OF_GTIN_NOT_RECEIVED = \"LOAD_LIST_OF_GTIN_NOT_RECEIVED\";\r\nexport const LOAD_SCHEDULED_SERVICE_REQUESTS =\r\n  \"LOAD_SCHEDULED_SERVICE_REQUESTS\";\r\nexport const LOAD_INCIDENTS_REPORTS_FOR_ITEM_RECEIVED =\r\n  \"LOAD_INCIDENTS_REPORTS_FOR_ITEM_RECEIVED\";\r\nexport const LOAD_CURRENT_WEEKS = \"LOAD_CURRENT_WEEKS\";\r\nexport const LOAD_DEFAULT_WEEK = \"LOAD_DEFAULT_WEEK\";\r\nexport const SET_FILTERS = \"SET_FILTERS\";\r\n","import * as types from \"./actionTypes\";\r\n\r\nexport const beginAjaxCall = () => {\r\n  return { type: types.BEGIN_AJAX_CALL };\r\n};\r\n\r\nexport const endAjaxCall = () => {\r\n  return { type: types.END_AJAX_CALL };\r\n};\r\n\r\nexport const ajaxCallError = () => {\r\n  return { type: types.AJAX_CALL_ERROR };\r\n};\r\n","export const DateFormat = \"MM/DD/YYYY\";\r\nexport const ListOfGtinNotReceivedExcelFileName = \"Gtin Not Received.xlsx\";\r\nexport const ScheduledServiceRequestsExcelFileName =\r\n  \"Scheduled Service Requests.xlsx\";\r\nexport const IncidentsReportsForItemReceivedFileName =\r\n  \"Incidents Reports For Item Received.xlsx\";\r\n\r\nexport const ResultsOptions = [\r\n  { label: \"All\", id: 0 },\r\n  { label: \"Good\", id: 1 },\r\n  { label: \"Missed\", id: 2 }\r\n];\r\nexport const ReceivedOptions = [\r\n  { label: \"All\", id: 0 },\r\n  { label: \"Late\", id: 1 },\r\n  { label: \"Early\", id: 2 },\r\n  { label: \"OnTime\", id: 3 }\r\n];\r\nexport const IsExternalOptions = [\r\n  { label: \"Both\", id: 2 },\r\n  { label: \"Internal Only\", id: 0 },\r\n  { label: \"External Only\", id: 1 }\r\n];\r\nexport const IncidentOptions = [\r\n  { label: \"True\", id: 0 },\r\n  { label: \"False\", id: 1 }\r\n];\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  ExcelExport,\r\n  ExcelExportColumn\r\n} from \"@progress/kendo-react-excel-export\";\r\n\r\nclass ExportExcel extends Component {\r\n  _exporter;\r\n  export = () => {\r\n    this._exporter.save();\r\n  };\r\n\r\n  render() {\r\n    let columns = this.props.columns.map((column, index) => (\r\n      <ExcelExportColumn\r\n        key={index}\r\n        field={column.field}\r\n        title={column.title}\r\n        filter={column.filter}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <button className=\"k-button k-primary\" onClick={this.export}>\r\n          Export to Excel\r\n        </button>\r\n\r\n        <ExcelExport\r\n          data={this.props.data}\r\n          fileName={this.props.fileName}\r\n          ref={exporter => {\r\n            this._exporter = exporter;\r\n          }}\r\n        >\r\n          {columns}\r\n        </ExcelExport>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExportExcel.propTypes = {\r\n  columns: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  fileName: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ExportExcel;\r\n","import React, { Component } from \"react\";\r\nimport { Grid, GridColumn, GridToolbar } from \"@progress/kendo-react-grid\";\r\nimport { orderBy } from \"@progress/kendo-data-query\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ReportGrid.css\";\r\nimport ExportExcel from \"./ExportExcel\";\r\n\r\nclass ReportGrid extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      sort: [{ field: \"\", dir: \"asc\" }],\r\n      skip: 0,\r\n      take: 10\r\n    };\r\n  }\r\n\r\n  render() {\r\n    let columns = this.props.columns.map((column, index) => (\r\n      <GridColumn\r\n        key={index}\r\n        field={column.field}\r\n        title={column.title}\r\n        filter={column.filter}\r\n        width={column.width}\r\n        minResizableWidth={column.minWidth}\r\n      />\r\n    ));\r\n\r\n    let gridContent = (\r\n      <div className=\"grid\">\r\n        <Grid\r\n          data={orderBy(\r\n            this.props.data.slice(\r\n              this.state.skip,\r\n              this.state.take + this.state.skip\r\n            ),\r\n            this.state.sort\r\n          )}\r\n          resizable\r\n          skip={this.state.skip}\r\n          take={this.state.take}\r\n          total={this.props.data.length}\r\n          pageable={{\r\n            type: \"input\",\r\n            pageSizes: [10, 20, 30],\r\n            previousNext: true\r\n          }}\r\n          onPageChange={event => {\r\n            this.setState({\r\n              skip: event.page.skip,\r\n              take: event.page.take,\r\n              pageSize: event.page.take\r\n            });\r\n          }}\r\n          sortable\r\n          sort={this.state.sort}\r\n          onSortChange={event => {\r\n            this.setState({\r\n              sort: event.sort\r\n            });\r\n          }}\r\n        >\r\n          <GridToolbar>\r\n            <div className=\"row toolbar\">\r\n              <ExportExcel\r\n                className=\"col-xs-12 col-sm-6\"\r\n                data={this.props.data}\r\n                columns={this.props.columns}\r\n                fileName={this.props.fileName}\r\n              />\r\n              <div className=\"col-xs-12 col-sm-6\">\r\n                <button\r\n                  className=\"k-button k-primary\"\r\n                  onClick={this.props.loadData}\r\n                >\r\n                  Refresh\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </GridToolbar>\r\n          {columns}\r\n        </Grid>\r\n      </div>\r\n    );\r\n\r\n    return <div className=\"\">{gridContent}</div>;\r\n  }\r\n}\r\n\r\nReportGrid.propTypes = {\r\n  columns: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  fileName: PropTypes.string.isRequired,\r\n  loadData: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ReportGrid;\r\n","export const IncidentsReportsForItemReceivedColumns = [\r\n  {\r\n    field: \"gtin_14\",\r\n    title: \"GTIN\",\r\n    filter: \"text\",\r\n    width: \"165px\",\r\n    minWidth: 165\r\n  },\r\n  {\r\n    field: \"descriptions\",\r\n    title: \"Descriptions\",\r\n    filter: \"text\",\r\n    width: \"200px\",\r\n    minWidth: 200\r\n  },\r\n  {\r\n    field: \"sampleIncidentStatus\",\r\n    title: \"Sample\",\r\n    filter: \"text\",\r\n    width: \"165px\",\r\n    minWidth: 165\r\n  },\r\n  {\r\n    field: \"eComIncidentStatus\",\r\n    title: \"eCom\",\r\n    filter: \"text\",\r\n    width: \"165px\",\r\n    minWidth: 165\r\n  },\r\n  {\r\n    field: \"dataEntryIncidentStatus\",\r\n    title: \"Data Entry\",\r\n    filter: \"text\",\r\n    width: \"165px\",\r\n    minWidth: 165\r\n  },\r\n  {\r\n    field: \"fsIncidentStatus\",\r\n    title: \"FS\",\r\n    filter: \"numeric\",\r\n    width: \"165px\",\r\n    minWidth: 165\r\n  },\r\n  {\r\n    field: \"measuredIncidentStatus\",\r\n    title: \"Measured\",\r\n    filter: \"numeric\",\r\n    width: \"165px\",\r\n    minWidth: 165\r\n  },\r\n  {\r\n    field: \"mktgIncidentStatus\",\r\n    title: \"Mktg\",\r\n    filter: \"numeric\",\r\n    width: \"165px\",\r\n    minWidth: 165\r\n  },\r\n  {\r\n    field: \"npingIncidentStatus\",\r\n    title: \"Nping\",\r\n    filter: \"numeric\",\r\n    width: \"165px\",\r\n    minWidth: 165\r\n  },\r\n  {\r\n    field: \"planoIncidentStatus\",\r\n    title: \"plano\",\r\n    filter: \"numeric\",\r\n    width: \"165px\",\r\n    minWidth: 165\r\n  },\r\n  {\r\n    field: \"weightedIncidentStatus\",\r\n    title: \"Weighted\",\r\n    filter: \"numeric\",\r\n    width: \"165px\",\r\n    minWidth: 165\r\n  }\r\n];\r\nexport const ScheduledServiceRequestsColumns = [\r\n  {\r\n    field: \"CompanyName\",\r\n    title: \"Company Name\",\r\n    filter: \"text\",\r\n    width: \"200px\",\r\n    minWidth: 200\r\n  },\r\n  {\r\n    field: \"GTIN\",\r\n    title: \"GTIN\",\r\n    filter: \"text\",\r\n    width: \"165px\",\r\n    minWidth: 165\r\n  },\r\n  {\r\n    field: \"SRId\",\r\n    title: \"SRN #\",\r\n    filter: \"numeric\",\r\n    width: \"165px\",\r\n    minWidth: 165\r\n  },\r\n  {\r\n    field: \"SR Creation Date\",\r\n    title: \"SR Creation Date\",\r\n    filter: \"date\",\r\n    width: \"130px\",\r\n    minWidth: 130\r\n  },\r\n  {\r\n    field: \"Shelf\",\r\n    title: \"Shelf\",\r\n    filter: \"text\",\r\n    width: \"145px\",\r\n    minWidth: 145\r\n  },\r\n  {\r\n    field: \"Freezer\",\r\n    title: \"Freezer\",\r\n    filter: \"text\",\r\n    width: \"145px\",\r\n    minWidth: 145\r\n  },\r\n  {\r\n    field: \"Refrigerator\",\r\n    title: \"Refrigerator\",\r\n    filter: \"text\",\r\n    width: \"145px\",\r\n    minWidth: 145\r\n  },\r\n  {\r\n    field: \"Scheduled Week\",\r\n    title: \"Scheduled Week\",\r\n    filter: \"date\",\r\n    width: \"130px\",\r\n    minWidth: 130\r\n  },\r\n  {\r\n    field: \"Receiveded Week\",\r\n    title: \"Receiveded Week\",\r\n    filter: \"date\",\r\n    width: \"130px\",\r\n    minWidth: 130\r\n  },\r\n  {\r\n    field: \"Difference\",\r\n    title: \"Difference\",\r\n    filter: \"text\",\r\n    width: \"145px\",\r\n    minWidth: 145\r\n  },\r\n  {\r\n    field: \"Result\",\r\n    title: \"Result\",\r\n    filter: \"text\",\r\n    width: \"145px\",\r\n    minWidth: 145\r\n  },\r\n  {\r\n    field: \"Received\",\r\n    title: \"Received\",\r\n    filter: \"text\",\r\n    width: \"145px\",\r\n    minWidth: 145\r\n  },\r\n  {\r\n    field: \"Service Request Status\",\r\n    title: \"Service Request Status\",\r\n    filter: \"text\",\r\n    width: \"145px\",\r\n    minWidth: 145\r\n  },\r\n  {\r\n    field: \"Item Status\",\r\n    title: \"Item Status\",\r\n    filter: \"text\",\r\n    width: \"145px\",\r\n    minWidth: 145\r\n  }\r\n];\r\n\r\nexport const ListOfGtinNotReceivedColumns = [\r\n  {\r\n    field: \"SRId\",\r\n    title: \"Service Request Id\",\r\n    filter: \"numeric\",\r\n    width: \"165px\",\r\n    minWidth: 165\r\n  },\r\n  {\r\n    field: \"PreRegOrNot\",\r\n    title: \"Pre Reg Or Not\",\r\n    filter: \"text\",\r\n    width: \"145px\",\r\n    minWidth: 145\r\n  },\r\n  {\r\n    field: \"GTIN\",\r\n    title: \"GTIN\",\r\n    filter: \"text\",\r\n    width: \"165px\",\r\n    minWidth: 165\r\n  },\r\n  {\r\n    field: \"ID\",\r\n    title: \"ID\",\r\n    filter: \"text\",\r\n    width: \"200px\",\r\n    minWidth: 200\r\n  },\r\n  {\r\n    field: \"CompanyName\",\r\n    title: \"Company Name\",\r\n    filter: \"text\",\r\n    width: \"200px\",\r\n    minWidth: 200\r\n  },\r\n  {\r\n    field: \"ContactName\",\r\n    title: \"Contact Name\",\r\n    filter: \"text\",\r\n    width: \"150px\",\r\n    minWidth: 150\r\n  },\r\n  {\r\n    field: \"ContactEmail\",\r\n    title: \"Contact Email\",\r\n    filter: \"text\",\r\n    width: \"180px\",\r\n    minWidth: 180\r\n  },\r\n  {\r\n    field: \"RFTPSB\",\r\n    title: \"RFTPSB\",\r\n    filter: \"text\",\r\n    width: \"100px\",\r\n    minWidth: 100\r\n  },\r\n  {\r\n    field: \"RTPSB\",\r\n    title: \"RTPSB\",\r\n    filter: \"text\",\r\n    width: \"100px\",\r\n    minWidth: 100\r\n  },\r\n  {\r\n    field: \"RTPESB\",\r\n    title: \"RTPESB\",\r\n    filter: \"text\",\r\n    width: \"100px\",\r\n    minWidth: 100\r\n  },\r\n  {\r\n    field: \"PI\",\r\n    title: \"PI\",\r\n    filter: \"text\",\r\n    width: \"60px\",\r\n    minWidth: 60\r\n  },\r\n  {\r\n    field: \"MS\",\r\n    title: \"MS\",\r\n    filter: \"text\",\r\n    width: \"70px\",\r\n    minWidth: 70\r\n  },\r\n  {\r\n    field: \"NI\",\r\n    title: \"NI\",\r\n    filter: \"text\",\r\n    width: \"70px\",\r\n    minWidth: 70\r\n  },\r\n  {\r\n    field: \"FS\",\r\n    title: \"FS\",\r\n    filter: \"text\",\r\n    width: \"70px\",\r\n    minWidth: 70\r\n  },\r\n  {\r\n    field: \"BSV\",\r\n    title: \"BSV\",\r\n    filter: \"text\",\r\n    width: \"80px\",\r\n    minWidth: 80\r\n  },\r\n  {\r\n    field: \"MI\",\r\n    title: \"MI\",\r\n    filter: \"text\",\r\n    width: \"70px\",\r\n    minWidth: 70\r\n  },\r\n  {\r\n    field: \"FI\",\r\n    title: \"FI\",\r\n    filter: \"text\",\r\n    width: \"60px\",\r\n    minWidth: 60\r\n  },\r\n  {\r\n    field: \"Pharma\",\r\n    title: \"Pharma\",\r\n    filter: \"text\",\r\n    width: \"100px\",\r\n    minWidth: 100\r\n  },\r\n  {\r\n    field: \"StorageType\",\r\n    title: \"Storage Type\",\r\n    filter: \"text\",\r\n    width: \"130px\",\r\n    minWidth: 130\r\n  },\r\n  {\r\n    field: \"DateCreated\",\r\n    title: \"Date Created\",\r\n    filter: \"date\",\r\n    width: \"130px\",\r\n    minWidth: 130\r\n  },\r\n  {\r\n    field: \"DateUpdated\",\r\n    title: \"Date Updated\",\r\n    filter: \"date\",\r\n    width: \"130px\",\r\n    minWidth: 130\r\n  },\r\n  {\r\n    field: \"DateScheduled\",\r\n    title: \"Date Scheduled\",\r\n    filter: \"date\",\r\n    width: \"150px\",\r\n    minWidth: 150\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport \"./ReportTitle.css\";\r\n\r\nexport default function ReportTitle({ title }) {\r\n  return (\r\n    <div className=\"card title\">\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{title}</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport LoadingPanel from \"../common/LoadingPanel\";\r\nimport { getListOfGtinNotReceived } from \"../../actions/ServiceRequestActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReportGrid from \"../common/ReportGrid\";\r\nimport { ListOfGtinNotReceivedColumns } from \"../../config/ReportColumns\";\r\nimport { ListOfGtinNotReceivedExcelFileName } from \"../../config/Settings\";\r\nimport ReportTitle from \"../common/ReportTitle\";\r\nclass ListOfGtinNotReceived extends Component {\r\n  componentDidMount() {\r\n    if (this.props.data.listOfGtinNotReceived.length === 0) {\r\n      this.props.getListOfGtinNotReceived();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReportTitle title=\"List of GTIN Not Received\" />\r\n        <ReportGrid\r\n          data={this.props.data.listOfGtinNotReceived}\r\n          columns={ListOfGtinNotReceivedColumns}\r\n          fileName={ListOfGtinNotReceivedExcelFileName}\r\n          loadData={this.props.getListOfGtinNotReceived}\r\n        />\r\n        <LoadingPanel />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nListOfGtinNotReceived.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  getListOfGtinNotReceived: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  data: state.data\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    getListOfGtinNotReceived\r\n  }\r\n)(ListOfGtinNotReceived);\r\n","import axios from \"axios\";\r\nimport * as types from \"./actionTypes\";\r\nimport { beginAjaxCall, ajaxCallError, endAjaxCall } from \"./ajaxStatusActions\";\r\nimport moment from \"moment\";\r\nimport { DateFormat } from \"../config/Settings\";\r\nimport toastr from \"toastr\";\r\n\r\nexport const getListOfGtinNotReceived = () => dispatch => {\r\n  dispatch(beginAjaxCall());\r\n  axios\r\n    .get(\"/api/ServiceRequestReport/GetServiceRequestListofGTIN_NotReceived\")\r\n    .then(res => {\r\n      res.data.forEach(row => {\r\n        row.DateCreated = moment(row.DateCreated).format(DateFormat);\r\n        row.DateUpdated = moment(row.DateUpdated).format(DateFormat);\r\n        row.DateScheduled = moment(row.DateScheduled).format(DateFormat);\r\n      });\r\n      dispatch({\r\n        type: types.LOAD_LIST_OF_GTIN_NOT_RECEIVED,\r\n        payload: res.data\r\n      });\r\n      dispatch(endAjaxCall());\r\n    })\r\n    .catch(error => {\r\n      dispatch(ajaxCallError(error));\r\n      toastr.error(\"Connection error\");\r\n    });\r\n};\r\n\r\nexport const getScheduleServiceRequests = (\r\n  startWeekId,\r\n  endWeekId,\r\n  receivedId,\r\n  resultId\r\n) => dispatch => {\r\n  dispatch(beginAjaxCall());\r\n  axios\r\n    .get(\r\n      \"/api/ServiceRequestReport/SR_ScheduledServiceRequests/\" +\r\n        startWeekId +\r\n        \"/\" +\r\n        endWeekId +\r\n        \"/\" +\r\n        receivedId +\r\n        \"/\" +\r\n        resultId\r\n    )\r\n    .then(res => {\r\n      dispatch({\r\n        type: types.LOAD_SCHEDULED_SERVICE_REQUESTS,\r\n        payload: res.data\r\n      });\r\n      dispatch(endAjaxCall());\r\n    })\r\n    .catch(error => {\r\n      dispatch(ajaxCallError(error));\r\n      toastr.error(\"Connection error\");\r\n    });\r\n};\r\n\r\nexport const getIncidentsReportsForItemReceived = (\r\n  startWeekId,\r\n  endWeekId,\r\n  isExternalId,\r\n  incidentId\r\n) => dispatch => {\r\n  dispatch(beginAjaxCall());\r\n  axios\r\n    .get(\r\n      \"/api/ServiceRequestReport/SR_ScheduledReportListGtin/\" +\r\n        startWeekId +\r\n        \"/\" +\r\n        endWeekId +\r\n        \"/\" +\r\n        isExternalId +\r\n        \"/\" +\r\n        incidentId\r\n    )\r\n    .then(res => {\r\n      dispatch({\r\n        type: types.LOAD_INCIDENTS_REPORTS_FOR_ITEM_RECEIVED,\r\n        payload: res.data\r\n      });\r\n      dispatch(endAjaxCall());\r\n    })\r\n    .catch(error => {\r\n      dispatch(ajaxCallError(error));\r\n      toastr.error(\"Connection error\");\r\n    });\r\n};\r\n","export default {\r\n  listOfGtinNotReceived: [],\r\n  weeks: {\r\n    defaultWeek: 0,\r\n    currentWeeks: []\r\n  },\r\n  ajaxCallsInProgress: 0,\r\n  filters: {},\r\n  data: {\r\n    listOfGtinNotReceived: [],\r\n    scheduledServiceRequests: [],\r\n    incidentsReportsForItemReceived: []\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport weeks from \"./weeksReducer\";\r\nimport ajaxCallsInProgress from \"./ajaxStatusReducer\";\r\nimport data from \"./dataReducer\";\r\nimport filters from \"./filtersReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  weeks,\r\n  ajaxCallsInProgress,\r\n  data,\r\n  filters\r\n});\r\n\r\nexport default rootReducer;\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function weeksReducer(state = initialState.weeks, action) {\r\n  switch (action.type) {\r\n    case types.LOAD_CURRENT_WEEKS:\r\n      return { ...state, currentWeeks: [...action.payload] };\r\n    case types.LOAD_DEFAULT_WEEK:\r\n      return { ...state, defaultWeek: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nfunction actionTypeEndsInSuccess(type) {\r\n  return type.substring(type.length - 8) === \"_SUCCESS\";\r\n}\r\n\r\nexport default function ajaxStatusReducer(\r\n  state = initialState.ajaxCallsInProgress,\r\n  action\r\n) {\r\n  if (action.type === types.BEGIN_AJAX_CALL) {\r\n    return state + 1;\r\n  } else if (\r\n    action.type === types.AJAX_CALL_ERROR ||\r\n    action.type === types.END_AJAX_CALL ||\r\n    actionTypeEndsInSuccess(action.type)\r\n  ) {\r\n    return state > 0 ? state - 1 : state;\r\n  }\r\n\r\n  return state;\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function listOfGtinNotReceivedReducer(\r\n  state = initialState.data,\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case types.LOAD_LIST_OF_GTIN_NOT_RECEIVED:\r\n      return { ...state, listOfGtinNotReceived: [...action.payload] };\r\n    case types.LOAD_SCHEDULED_SERVICE_REQUESTS:\r\n      return { ...state, scheduledServiceRequests: [...action.payload] };\r\n    case types.LOAD_INCIDENTS_REPORTS_FOR_ITEM_RECEIVED:\r\n      return { ...state, incidentsReportsForItemReceived: [...action.payload] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as types from \"../actions/actionTypes\";\r\nimport initialState from \"./initialState\";\r\n\r\nexport default function filtersReducer(state = initialState.filters, action) {\r\n  return action.type === types.SET_FILTERS\r\n    ? { ...state, ...action.payload }\r\n    : state;\r\n}\r\n","export const ScheduleServiceRequestsStatusReportFilter =\r\n  \"ScheduleServiceRequestsStatusReportFilter\";\r\nexport const IncidentsReportsForItemReceivedFilter =\r\n  \"IncidentsReportsForItemReceivedFilter\";\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport { DropDownList } from \"@progress/kendo-react-dropdowns\";\r\n\r\nclass DropDownFilter extends Component {\r\n  onChange = event => {\r\n    this.props.onChange(event.target.value[this.props.dataItemKey]);\r\n  };\r\n\r\n  render() {\r\n    let selectedItem = _.find(\r\n      this.props.data,\r\n      x => x[this.props.dataItemKey] === this.props.id\r\n    );\r\n\r\n    return (\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-2 col-form-label\">{this.props.title}</label>\r\n        <div className=\"col-4\">\r\n          <DropDownList\r\n            className=\"form-control\"\r\n            data={this.props.data}\r\n            textField={this.props.textField}\r\n            dataItemKey={this.props.dataItemKey}\r\n            value={selectedItem}\r\n            onChange={this.onChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDropDownFilter.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  textField: PropTypes.string.isRequired,\r\n  dataItemKey: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default DropDownFilter;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Switch } from \"@progress/kendo-react-inputs\";\r\n\r\nclass ToggleFilter extends Component {\r\n  onChange = event => {\r\n    this.props.onChange(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-group row\">\r\n        <label className=\"col-2 col-form-label\">{this.props.title}</label>\r\n        <div className=\"col-4\">\r\n          <Switch onChange={this.onChange} checked={this.props.checked} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nToggleFilter.propTypes = {\r\n  checked: PropTypes.bool.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ToggleFilter;\r\n","import React, { Component } from \"react\";\r\nimport * as filterTypes from \"./filterTypes\";\r\nimport DropDownFilter from \"./DropDownFilter\";\r\nimport ToggleFilter from \"./ToggleFilter\";\r\nimport {\r\n  ResultsOptions,\r\n  ReceivedOptions,\r\n  IsExternalOptions\r\n} from \"../../config/Settings\";\r\nimport {\r\n  getCurrentWeeks,\r\n  getDefaultWeek,\r\n  setFilter\r\n} from \"../../actions/FilterActions\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ReportFilters extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startWeek: 0,\r\n      endWeek: 0,\r\n      received: 0,\r\n      result: 0,\r\n      isExternal: 2,\r\n      isShowAllIncident: true\r\n    };\r\n    this.props.setFilter({ ...this.state });\r\n  }\r\n  componentDidMount() {\r\n    this.props.getCurrentWeeks();\r\n    this.props.getDefaultWeek();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.state.startWeek === 0 && nextProps.weeks.defaultWeek > 0) {\r\n      this.setState({ startWeek: nextProps.weeks.defaultWeek });\r\n      this.props.setFilter({ startWeek: nextProps.weeks.defaultWeek });\r\n    }\r\n    if (this.state.endWeek === 0 && nextProps.weeks.defaultWeek > 0) {\r\n      this.setState({ endWeek: nextProps.weeks.defaultWeek });\r\n      this.props.setFilter({ endWeek: nextProps.weeks.defaultWeek });\r\n    }\r\n  }\r\n\r\n  onStartWeekChange = startWeek => {\r\n    this.setState({ startWeek });\r\n    this.props.setFilter({ startWeek });\r\n  };\r\n\r\n  onEndWeekChange = endWeek => {\r\n    this.setState({ endWeek });\r\n    this.props.setFilter({ endWeek });\r\n  };\r\n\r\n  onResultChange = result => {\r\n    this.setState({ result });\r\n    this.props.setFilter({ result });\r\n  };\r\n\r\n  onReceivedChange = received => {\r\n    this.setState({ received });\r\n    this.props.setFilter({ received });\r\n  };\r\n\r\n  onIsExternalChange = isExternal => {\r\n    this.setState({ isExternal });\r\n    this.props.setFilter({ isExternal });\r\n  };\r\n\r\n  onShowAllIncident = isShowAllIncident => {\r\n    this.setState({ isShowAllIncident });\r\n    this.props.setFilter({ isShowAllIncident });\r\n  };\r\n\r\n  render() {\r\n    let filters = <div />;\r\n    switch (this.props.filterType) {\r\n      case filterTypes.ScheduleServiceRequestsStatusReportFilter:\r\n        filters = (\r\n          <form>\r\n            <DropDownFilter\r\n              data={this.props.weeks.currentWeeks}\r\n              title={\"Start Week\"}\r\n              id={this.state.startWeek}\r\n              textField=\"label\"\r\n              dataItemKey=\"schedid\"\r\n              onChange={this.onStartWeekChange}\r\n            />\r\n            <DropDownFilter\r\n              data={this.props.weeks.currentWeeks}\r\n              title={\"End Week\"}\r\n              id={this.state.endWeek}\r\n              textField=\"label\"\r\n              dataItemKey=\"schedid\"\r\n              onChange={this.onEndWeekChange}\r\n            />\r\n            <DropDownFilter\r\n              data={ReceivedOptions}\r\n              title={\"Received\"}\r\n              id={this.state.received}\r\n              textField=\"label\"\r\n              dataItemKey=\"id\"\r\n              onChange={this.onReceivedChange}\r\n            />\r\n            <DropDownFilter\r\n              data={ResultsOptions}\r\n              title={\"Result\"}\r\n              id={this.state.result}\r\n              textField=\"label\"\r\n              dataItemKey=\"id\"\r\n              onChange={this.onResultChange}\r\n            />\r\n          </form>\r\n        );\r\n        break;\r\n      case filterTypes.IncidentsReportsForItemReceivedFilter:\r\n        filters = (\r\n          <form>\r\n            <DropDownFilter\r\n              data={this.props.weeks.currentWeeks}\r\n              title={\"Start Week\"}\r\n              id={this.state.startWeek}\r\n              textField=\"label\"\r\n              dataItemKey=\"schedid\"\r\n              onChange={this.onStartWeekChange}\r\n            />\r\n            <DropDownFilter\r\n              data={this.props.weeks.currentWeeks}\r\n              title={\"End Week\"}\r\n              id={this.state.endWeek}\r\n              textField=\"label\"\r\n              dataItemKey=\"schedid\"\r\n              onChange={this.onEndWeekChange}\r\n            />\r\n            <DropDownFilter\r\n              data={IsExternalOptions}\r\n              title={\"Internal/External\"}\r\n              id={this.state.isExternal}\r\n              textField=\"label\"\r\n              dataItemKey=\"id\"\r\n              onChange={this.onIsExternalChange}\r\n            />\r\n            <ToggleFilter\r\n              title=\"Show all GTINS\"\r\n              checked={this.state.isShowAllIncident}\r\n              onChange={this.onShowAllIncident}\r\n            />\r\n          </form>\r\n        );\r\n        break;\r\n      default:\r\n        filters = <div />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-12 col-sm-6 offset-sm-3\">\r\n          <div className=\"\">\r\n            <div className=\"card-block\">{filters}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReportFilters.propTypes = {\r\n  weeks: PropTypes.object.isRequired,\r\n  getCurrentWeeks: PropTypes.func.isRequired,\r\n  getDefaultWeek: PropTypes.func.isRequired,\r\n  setFilter: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  weeks: state.weeks\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    getCurrentWeeks,\r\n    getDefaultWeek,\r\n    setFilter\r\n  }\r\n)(ReportFilters);\r\n","import axios from \"axios\";\r\nimport * as types from \"./actionTypes\";\r\nimport { beginAjaxCall, ajaxCallError, endAjaxCall } from \"./ajaxStatusActions\";\r\nimport toastr from \"toastr\";\r\n\r\nexport const getCurrentWeeks = () => dispatch => {\r\n  dispatch(beginAjaxCall());\r\n  axios\r\n    .get(\"/api/ServiceRequestReport/GetServiceRequestCurrentWeeks\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: types.LOAD_CURRENT_WEEKS,\r\n        payload: res.data\r\n      });\r\n      dispatch(endAjaxCall());\r\n    })\r\n    .catch(error => {\r\n      dispatch(ajaxCallError(error));\r\n      toastr.error(\"Connection error\");\r\n    });\r\n};\r\n\r\nexport const getDefaultWeek = () => dispatch => {\r\n  dispatch(beginAjaxCall());\r\n  axios\r\n    .get(\"/api/ServiceRequestReport/GetServiceRequestDefaultWeek\")\r\n    .then(res => {\r\n      dispatch({\r\n        type: types.LOAD_DEFAULT_WEEK,\r\n        payload: res.data\r\n      });\r\n      dispatch(endAjaxCall());\r\n    })\r\n    .catch(error => {\r\n      dispatch(ajaxCallError(error));\r\n      toastr.error(\"Connection error\");\r\n    });\r\n};\r\n\r\nexport const setFilter = data => dispatch => {\r\n  dispatch({ type: types.SET_FILTERS, payload: data });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReportTitle from \"../common/ReportTitle\";\r\nimport ReportFilters from \"../common/ReportFilters\";\r\nimport LoadingPanel from \"../common/LoadingPanel\";\r\nimport * as filterTypes from \"../common/filterTypes\";\r\nimport { getScheduleServiceRequests } from \"../../actions/ServiceRequestActions\";\r\nimport ReportGrid from \"../common/ReportGrid\";\r\nimport { ScheduledServiceRequestsExcelFileName } from \"../../config/Settings\";\r\nimport { ScheduledServiceRequestsColumns } from \"../../config/ReportColumns\";\r\n\r\nclass ScheduleServiceRequestsStatusReport extends Component {\r\n  componentWillReceiveProps({ filters }) {\r\n    if (\r\n      this.props.filters.startWeek !== filters.startWeek ||\r\n      this.props.filters.endWeek !== filters.endWeek ||\r\n      this.props.filters.received !== filters.received ||\r\n      this.props.filters.result !== filters.result\r\n    ) {\r\n      this.loadData(filters);\r\n    }\r\n  }\r\n\r\n  loadData = filters => {\r\n    this.props.getScheduleServiceRequests(\r\n      filters.startWeek,\r\n      filters.endWeek,\r\n      filters.received,\r\n      filters.result\r\n    );\r\n  };\r\n\r\n  refreshData = () => this.loadData(this.props.filters);\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReportTitle title=\"Scheduled Service Requests Status\" />\r\n        <ReportFilters\r\n          filterType={filterTypes.ScheduleServiceRequestsStatusReportFilter}\r\n        />\r\n        <ReportGrid\r\n          data={this.props.data.scheduledServiceRequests}\r\n          columns={ScheduledServiceRequestsColumns}\r\n          fileName={ScheduledServiceRequestsExcelFileName}\r\n          loadData={this.refreshData}\r\n        />\r\n        <LoadingPanel />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nScheduleServiceRequestsStatusReport.propTypes = {\r\n  filters: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  getScheduleServiceRequests: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.filters,\r\n  data: state.data\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getScheduleServiceRequests }\r\n)(ScheduleServiceRequestsStatusReport);\r\n","import React, { Component } from \"react\";\r\nimport LoadingPanel from \"../common/LoadingPanel\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReportGrid from \"../common/ReportGrid\";\r\nimport { IncidentsReportsForItemReceivedColumns } from \"../../config/ReportColumns\";\r\nimport { IncidentsReportsForItemReceivedFileName } from \"../../config/Settings\";\r\nimport ReportTitle from \"../common/ReportTitle\";\r\nimport ReportFilters from \"../common/ReportFilters\";\r\nimport * as filterTypes from \"../common/filterTypes\";\r\nimport { getIncidentsReportsForItemReceived } from \"../../actions/ServiceRequestActions\";\r\n\r\nclass IncidentsReportsForItemReceived extends Component {\r\n  componentWillReceiveProps({ filters }) {\r\n    if (\r\n      this.props.filters.startWeek !== filters.startWeek ||\r\n      this.props.filters.endWeek !== filters.endWeek ||\r\n      this.props.filters.isExternal !== filters.isExternal ||\r\n      this.props.filters.isShowAllIncident !== filters.isShowAllIncident\r\n    ) {\r\n      this.loadData(filters);\r\n    }\r\n  }\r\n\r\n  loadData = filters => {\r\n    this.props.getIncidentsReportsForItemReceived(\r\n      filters.startWeek,\r\n      filters.endWeek,\r\n      filters.isExternal,\r\n      filters.isShowAllIncident ? 1 : 0\r\n    );\r\n  };\r\n\r\n  refreshData = () => this.loadData(this.props.filters);\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReportTitle title=\"Scheduled Service Requests Status\" />\r\n        <ReportFilters\r\n          filterType={filterTypes.IncidentsReportsForItemReceivedFilter}\r\n        />\r\n        <ReportGrid\r\n          data={this.props.data.incidentsReportsForItemReceived}\r\n          columns={IncidentsReportsForItemReceivedColumns}\r\n          fileName={IncidentsReportsForItemReceivedFileName}\r\n          loadData={this.refreshData}\r\n        />\r\n        <LoadingPanel />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIncidentsReportsForItemReceived.propTypes = {\r\n  filters: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n  getIncidentsReportsForItemReceived: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filters: state.filters,\r\n  data: state.data\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getIncidentsReportsForItemReceived }\r\n)(IncidentsReportsForItemReceived);\r\n","import \"babel-polyfill\";\nimport React, { Component } from \"react\";\nimport { Provider } from \"react-redux\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Reports from \"./components/reports/Reports\";\nimport Header from \"./components/layout/Header\";\nimport SideNav from \"./components/layout/SideNav\";\nimport ListOfGtinNotReceived from \"./components/reports/ListOfGtinNotReceived\";\nimport configureStore from \"./store/configureStore\";\nimport ScheduleServiceRequestsStatusReport from \"./components/reports/ScheduleServiceRequestsStatusReport\";\nimport IncidentsReportsForItemReceived from \"./components/reports/IncidentsReportsForItemReceived\";\n\nconst store = configureStore();\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"container-fluid\">\n            <div className=\"col App\">\n              <Header className=\"row\" />\n              <div className=\"row\">\n                <SideNav />\n                <div className=\"col report-area\">\n                  <Route exact path=\"/\" component={Reports} />\n                  <Route exact path=\"/reports\" component={Reports} />\n                  <Route\n                    exact\n                    path=\"/reports/listOfGtinNotReceived\"\n                    component={ListOfGtinNotReceived}\n                  />\n                  <Route\n                    exact\n                    path=\"/reports/incidentsReportsForItemReceived\"\n                    component={IncidentsReportsForItemReceived}\n                  />\n                  <Route\n                    exact\n                    path=\"/reports/scheduleServiceRequestsStatusReport\"\n                    component={ScheduleServiceRequestsStatusReport}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {createStore, applyMiddleware} from 'redux';\r\nimport rootReducer from '../reducers';\r\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport default function configureStore(initialState) {\r\n    var middleware = [thunk, reduxImmutableStateInvariant()];\r\n\r\n    return createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"../node_modules/@progress/kendo-theme-default/dist/all.css\";\nimport \"../node_modules/toastr/build/toastr.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}